################
## BUILDER STAGE
################
# DOCKER_BUILDKIT=1 docker build -t prod --build-arg APP_ENV=prod -<<'EOF'
# reference: https://github.com/docker/cli/issues/1134#issuecomment-406449342
# defined on .env
ARG SERVER_ENV


FROM node:16 as base
RUN echo "## server initialize"

WORKDIR /usr/src/mytable

COPY package.json .
COPY yarn.lock .
COPY config/eslint-config ./config/eslint-config
COPY config/prettier-config ./config/prettier-config
COPY apps/server ./apps/server


FROM base as prod-deps
RUN echo "installing PROD dependencies"
RUN yarn install --pure-lockfile --non-interactive --production
RUN npm install -g @nestjs/cli@8


FROM base as dev-deps
RUN echo "installing DEV dependencies"
COPY .env ./.env
RUN yarn install --frozen-lockfile --non-interactive
RUN yarn workspace @mytable/server prisma:generate
# RUN yarn workspace @mytable/server prisma:db:push



FROM ${SERVER_ENV}-deps as install
RUN echo "## server installation done"


# FROM dev-deps as dev
# RUN echo "server DEV initialization finalization"
# EXPOSE 3000
# CMD ["yarn", "@mytable/server", "start:dev"]


# FROM prod-deps as prod
# RUN echo "server PROD initialization finalization"
# EXPOSE 3000
# CMD ["yarn", "@mytable/server", "start:prod"]


# COPY apps/server/package.json ./apps/server/package.json
# COPY apps/server/prisma/schema.prisma ./apps/server/prisma/schema.prisma

# RUN apk add --no-cache python3 make g++
# RUN apt-get update && apt-get install -y openssl libssl-dev


# COPY . .

# RUN npm install -g @nestjs/cli@8

# RUN yarn workspace @mytable/server build

# ################
# ## DEPLOYER STAGE
# ################
# FROM builder as deployer

# # COPY --from=builder /node_modules ./node_modules
# # COPY --from=builder /apps/server/node_modules ./apps/server/node_modules
# COPY --from=builder /apps/server/dist ./apps/server/dist

# EXPOSE 3000
# CMD ["yarn", "@mytable/server", "start:prod"]
# # CMD ["yarn", "@mytable/server", "start:prod"]
